<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<manifest>
    <application name="CSK_Module_FlowConfig">
        <crown name="CSK_Module_FlowConfig">
            <desc>This is an automatically generated CROWN (description not necessary).</desc>
        </crown>
        <crown name="CSK_FlowConfig">
            <trait>released</trait>
            <desc>Module to link features of CSK modules supporting the 'CSK FlowConfig'. +
It makes use of a BlocksEditor within the UI to take care of the configuration. +
{empty} +
Check the UI of this CSK module to configure the system. +</desc>
            <enum name="SaveMode" trait="released">
                <desc>Mode of saving configuration</desc>
                <item desc="This will save the configuration of the flow and additionally triggers all CSK modules available on the device to save their current configuration in PersistentData" name="ALL">ALL</item>
                <item desc="This will save the configuration of the flow and additionally triggers all CSK modules used within the flow to save their current configuration in PersistentData" name="FLOW">FLOW</item>
                <item desc="This will only save the configuration of the flow in PersistentData. Configurations done in other CSK modules need to be saved additionally" name="MODULE">MODULE</item>
            </enum>
            <enum name="LogicOperator" trait="released" type="string">
                <desc>Logical operators</desc>
                <item desc="AND operation (will be evaluated when both states have changed)" name="AND">AND</item>
                <item desc="OR operation (will be evaluated when both states have changed)" name="OR">OR</item>
                <item desc="Invert incoming boolean value." name="INVERT">INVERT</item>
                <item desc="Check if value is greater than definition of criteriaA." name="GREATER">GREATER</item>
                <item desc="Check if value is greater or equal as definition of criteriaA." name="GREATER_EQUAL">GREATER_EQUAL</item>
                <item desc="Check if value is less than definition of criteriaA." name="LESS">LESS</item>
                <item desc="Check if value is less or equal as definition of criteriaA." name="LESS_EQUAL">LESS_EQUAL</item>
                <item desc="Check if value is greater/equal as critieriaA and smaller/equal as critieriaB." name="WITHIN_RANGE">WITHIN_RANGE</item>
                <item desc="Check if value is smaller/equal as critieriaA and bigger/equal as critieriaB." name="OUT_OF_RANGE">OUT_OF_RANGE</item>
                <item desc="Check if value is equal to criteriaA." name="EQUAL">EQUAL</item>
                <item desc="Check if value changed." name="CHANGED">CHANGED</item>
                <item desc="Continuous AND operation (keeps previous received status and directly compares with this)" name="AND_PREV">AND_PREV</item>
                <item desc="Continuous OR operation (keeps previous received status and directly compares with this)" name="OR_PREV">OR_PREV</item>
                <item desc="Check if value changed from FALSE to TRUE." name="RISING_EDGE">RISING_EDGE</item>
            </enum>
            <serves>
                <event name="OnNewStatusLoadParameterOnReboot">
                    <desc>Notify status if parameters should be loaded on app/device boot up.</desc>
                    <param desc="Status" multiplicity="1" name="status" type="bool"/>
                </event>
                <event name="OnPersistentDataModuleAvailable">
                    <desc>Notify status if features of CSK_PersistendData module are available.</desc>
                    <param desc="Status" multiplicity="1" name="status" type="bool"/>
                </event>
                <event name="OnDataLoadedOnReboot">
                    <desc>Event to call if module tried to load parameters and should be ready.</desc>
                </event>
                <event name="OnNewParameterName">
                    <desc>Notify name of persistent data parameter.</desc>
                    <param desc="Parameter name" multiplicity="1" name="name" type="string"/>
                </event>
                <event name="OnUserLevelOperatorActive">
                    <desc>Status of Operator userlevel. Used internally in combination with the CSK_UserManagement module if available.</desc>
                    <param desc="Status" multiplicity="1" name="status" type="bool"/>
                </event>
                <event name="OnUserLevelMaintenanceActive">
                    <desc>Status of Maintenance userlevel. Used internally in combination with the CSK_UserManagement module if available.</desc>
                    <param desc="Status" multiplicity="1" name="status" type="bool"/>
                </event>
                <event name="OnUserLevelServiceActive">
                    <desc>Status of Service userlevel. Used internally in combination with the CSK_UserManagement module if available.</desc>
                    <param desc="Status" multiplicity="1" name="status" type="bool"/>
                </event>
                <event name="OnUserLevelAdminActive">
                    <desc>Status of Admin userlevel. Used internally in combination with the CSK_UserManagement module if available.</desc>
                    <param desc="Status" multiplicity="1" name="status" type="bool"/>
                </event>
                <event name="OnNewFlow">
                    <desc>Notify currently active flow.</desc>
                    <param desc="Flow configuration." multiplicity="1" name="flow" type="string"/>
                </event>
                <event name="OnNewManifest">
                    <desc>Notify available manifest for BlocksEditor.</desc>
                    <param desc="Manifest" multiplicity="1" name="manifest" type="string"/>
                </event>
                <event name="OnClearOldFlow">
                    <desc>Notify to clear all old flow config.</desc>
                </event>
                <event name="OnNewFlowConfig">
                    <desc>Notify that new FlowConfig is available so that related modules can use it.</desc>
                </event>
                <event name="OnNewValue">
                    <desc>Notify test value to trigger / debug FlowConfig</desc>
                    <param desc="Value" multiplicity="1" name="value" type="auto"/>
                    <param desc="Timestamp" multiplicity="1" name="timestamp" type="int"/>
                </event>
                <event name="OnNewStatusTriggerValue">
                    <desc>Notify update for trigger value</desc>
                    <param desc="Value" multiplicity="1" name="value" type="auto"/>
                    <param desc="Cycle time in ms (0 if single trigger)." multiplicity="1" name="cycleTime" type="int"/>
                </event>
                <event name="OnNewStatusSaveAllModulesAvailable">
                    <desc>Notfiy if CSK_PersistentData module provides the feature to save all configs.</desc>
                    <param desc="Status" multiplicity="1" name="status" type="bool"/>
                </event>
                <event name="OnNewStatusFlowActiveUIInfo">
                    <desc>Notify message on UI if saved flow was sucessfully loaded.</desc>
                    <param desc="Status" multiplicity="1" name="status" type="string"/>
                </event>
                <event name="OnNewStatusCSKStyle">
                    <desc>Notify status to use custom UI style.</desc>
                    <param desc="Style" multiplicity="1" name="style" type="string"/>
                </event>
                <event name="OnNewStatusDemoFlow">
                    <desc>Notify selected demo flow.</desc>
                    <param desc="Name of flow." multiplicity="1" name="name" type="string"/>
                </event>
                <event name="OnNewStatusModuleVersion">
                    <desc>Notify version of module.</desc>
                    <param desc="Version" multiplicity="1" name="version" type="string"/>
                </event>
                <event name="OnNewStatusModuleIsActive">
                    <desc>Notify if module can be used on device.</desc>
                    <param desc="Status" multiplicity="1" name="status" type="bool"/>
                </event>
                <event name="OnNewStatusInfoToggle">
                    <desc>Notfiy status to show info in UI.</desc>
                    <param desc="Status" multiplicity="1" name="status" type="bool"/>
                </event>
                <event name="OnNewStatusSaveMode">
                    <desc>Notify mode to save configurations.</desc>
                    <param desc="Mode" multiplicity="1" name="mode" type="string"/>
                </event>
                <event name="OnNewStatusShowInfoOnPageReload">
                    <desc>Notify if information of FlowConfig should be shown on UI page reload.</desc>
                    <param desc="Status" multiplicity="1" name="status" type="bool"/>
                </event>
                <event name="OnNewStatusFlowConfigReady">
                    <desc>Notify that FlowConfig module is ready.</desc>
                </event>
                <event name="OnExpired_TYPE_TIME_VALUE">
                    <desc>Example of dynamically served event to periodically notify a value to trigger other features. +
TYPE, TIME and VALUE will be replaced by the name of the added expression (e.g. "CSK_FlowConfig.OnExpired_BOOL_100_TRUE"). +
INFO: Other modules can check via "Script.isServedAsFunction" if event exists. +</desc>
                    <param desc="Value" multiplicity="1" name="value" type="auto"/>
                    <param desc="Timestamp" multiplicity="1" name="timestamp" type="int"/>
                </event>
                <event name="OnNewLogicResult_ID">
                    <desc>Example of dynamically served event to notify result of logic operation. +
ID will be replaced by internal set identifier of logic block (e.g. "CSK_FlowConfig.OnNewLogicResult_2"). +
INFO: Other modules can check via "Script.isServedAsFunction" if event exists. +</desc>
                    <param desc="Value" multiplicity="1" name="value" type="auto"/>
                    <param desc="Timestamp" multiplicity="1" name="timestamp" type="int"/>
                </event>
                <event name="OnNewValueToForward_ID">
                    <desc>Example of dynamically served event to notify the checked value of a logic operation if its result was successfull. +
ID will be replaced by internal set identifier of logic block (e.g. "CSK_FlowConfig.OnNewValueToForward_2"). +
INFO: Other modules can check via "Script.isServedAsFunction" if event exists. +</desc>
                    <param desc="Value" multiplicity="1" name="value" type="auto"/>
                    <param desc="Timestamp" multiplicity="1" name="timestamp" type="int"/>
                </event>
                <event name="OnStopFlowConfigProviders">
                    <desc>Notify event to stop FlowConfig relevant providers.</desc>
                </event>
                <function name="setParameterName">
                    <desc>Function to set the name of the parameters if saved/loaded via the CSK_PersistentData module.</desc>
                    <param desc="Name of the parameter." multiplicity="1" name="name" type="string"/>
                </function>
                <function name="sendParameters">
                    <desc>Send parameters to CSK_PersistentData module if possible to save them.</desc>
                    <param desc="[Optional] Set to TRUE if the data should NOT be saved immediately after sending." multiplicity="?" name="noDataSave" type="bool"/>
                </function>
                <function name="setLoadOnReboot">
                    <desc>Configure if this module should load its saved parameters at app/device boot up.</desc>
                    <param desc="Status" multiplicity="1" name="status" type="bool"/>
                </function>
                <function name="pageCalled">
                    <desc>Function to register "OnResume" of the module UI (only as helper function).</desc>
                    <return desc="Empty string (only needed to simplify binding)." multiplicity="1" name="empty" type="string"/>
                </function>
                <function name="getFlow">
                    <desc>Function to process the provided flow received by the UI BlocksEditor.</desc>
                    <param desc="Flow configuration as string." multiplicity="1" name="flow" type="string"/>
                </function>
                <function name="openUI">
                    <desc>Function to get the trigger to open block UI.</desc>
                    <param desc="Name of block related CROWN" multiplicity="1" name="nameOfBlock" type="string"/>
                </function>
                <function name="setTriggerValue">
                    <desc>Function to set trigger value to send via 'OnNewValue' event.</desc>
                    <param desc="Value" multiplicity="1" name="value" type="auto"/>
                    <param desc="Cycle time in ms ('0' if single trigger)" multiplicity="1" name="cycleTime" type="int"/>
                </function>
                <function name="saveAllModuleConfigs">
                    <desc>Function to trigger all CSK modules to save their configuration via CSK_PersistentData module and additionally activate their "Load config on app start"  flag.</desc>
                </function>
                <function name="saveFlowRelevantModuleConfigs">
                    <desc>Function to trigger CSK modules used within the flow to save their configuration via CSK_PersistentData module and additionally activate their "Load config on app start"  flag.</desc>
                </function>
                <function name="reloadApps">
                    <desc>Function to reload all apps.</desc>
                </function>
                <function name="setDemoFlow">
                    <desc>Function to selecte demo flow to load.</desc>
                    <param desc="Name of flow." multiplicity="1" name="flowName" type="string"/>
                </function>
                <function name="loadDemoFlow">
                    <desc>Function to load demo flow.</desc>
                </function>
                <function name="stopTriggerTimer">
                    <desc>Function to stop the timer of the 'OnNewValue' event.</desc>
                </function>
                <function name="loadParameters">
                    <desc>Load parameters for this module from the CSK_PersistentData module if possible and use them.</desc>
                    <return desc="Success to load parameters." multiplicity="1" name="success" type="bool"/>
                </function>
                <function name="setInfoToggle">
                    <desc>Function to set toggle status to show info in UI.</desc>
                    <param desc="Status" multiplicity="1" name="status" type="bool"/>
                </function>
                <function name="setSaveMode">
                    <desc>Function to set save mode for configurations.</desc>
                    <param desc="Mode of saving method." multiplicity="1" name="mode" ref="CSK_FlowConfig.SaveMode" type="enum"/>
                </function>
                <function name="saveConfigViaUI">
                    <desc>Function to save configuration. Method base on set save mode (see 'setSaveMode').</desc>
                </function>
                <function name="getParameters">
                    <trait>released</trait>
                    <desc>Function to get all parameters of the client in JSON format.</desc>
                    <return desc="JSON string with all parameters." multiplicity="1" name="jsonParameters" type="string"/>
                </function>
                <function name="getStatusModuleActive">
                    <desc>Function to get status if module is active.</desc>
                    <return desc="Status" multiplicity="1" name="status" type="bool"/>
                </function>
                <function name="resetModule">
                    <desc>Function to reset main configuration of module.</desc>
                </function>
                <function name="setShowImportantInformation">
                    <desc>Function to set if important information regarding the FlowConfig should be shown within the UI at page reload.</desc>
                    <param desc="Status" multiplicity="1" name="status" type="bool"/>
                </function>
                <function name="addTimer">
                    <desc>Function to add a cyclic timer to trigger events.</desc>
                    <param desc="Value to send via event.&#10;For 'BOOL' values use &quot;true&quot; or &quot;false&quot;" multiplicity="1" name="value" type="string"/>
                    <param desc="Type of value to send." multiplicity="1" name="valueType" type="string"/>
                    <param desc="Cycle time in ms ('0' for single trigger)" multiplicity="1" name="cycleTime" type="int"/>
                </function>
                <function name="addLogicBlock">
                    <desc>Function to internally add logic blocks.</desc>
                    <param desc="Internally set instance identifier." multiplicity="1" name="instance" type="string"/>
                    <param desc="Logic to use." multiplicity="1" name="logic" ref="CSK_FlowConfig.LogicOperator" type="enum"/>
                    <param desc="Source for value1." multiplicity="1" name="source1" type="string"/>
                    <param desc="Optional source for value2." multiplicity="?" name="source2" type="string"/>
                    <param desc="Optional criteriaA, used by some operators (see info for logic)." multiplicity="?" name="criteriaA" type="string"/>
                    <param desc="Optional valueB, used by some operators (see info for logic)." multiplicity="?" name="valueB" type="string"/>
                </function>
                <function name="stopFlowProviders">
                    <desc>Function to trigger event to stop FlowConfig relevant providers.</desc>
                </function>
            </serves>
        </crown>
        <crown name="FlowConfig_FC">
            <trait>released</trait>
            <desc>Crown to provide CSK_FlowConfig relevant features.</desc>
            <enum name="ValueType" trait="released">
                <desc>Types of value to use.</desc>
                <item desc="String" name="STRING">STRING</item>
                <item desc="Number" name="NUMBER">NUMBER</item>
                <item desc="Bool" name="BOOL">BOOL</item>
            </enum>
            <serves/>
            <crown name="OnNewValue">
                <trait>released</trait>
                <desc>DEPRECATED - Use 'OnExpired' block instead.
Provide values. Especially helpful for testing purposes.</desc>
                <serves>
                    <event name="OnNewValue">
                        <include>data-flow</include>
                        <desc>DEPRECATED - Use 'OnExpired' block instead.
Provide values. Especially helpful for testing purposes.
Will send current timestamp as 2nd parameter.</desc>
                        <param desc="Handle to internally used FlowConfig instance." multiplicity="1" name="handle" type="handle"/>
                        <param desc="'CSK_FlowConfig.OnNewValue'&#10;&#10;Parameter:&#10;1: Value (STRING or NUMBER or BOOL)&#10;2: Timestamp (INT)" multiplicity="1" name="OnNewValue" type="string"/>
                    </event>
                    <function name="create">
                        <trait>released</trait>
                        <desc>Internally used CSK_FlowConfig create function.</desc>
                        <param desc="Value to send via event.&#10;For 'BOOL' values use &quot;true&quot; or &quot;false&quot;" multiplicity="1" name="Value" type="string"/>
                        <param desc="Type of value to send." multiplicity="1" name="ValueType" ref="FlowConfig_FC.ValueType" type="enum"/>
                        <param desc="Cycle time in ms ('0' for single trigger)" multiplicity="1" name="CycleTime" type="int"/>
                        <return desc="Handle to internally used FlowConfig instance." multiplicity="1" name="handle" type="handle"/>
                    </function>
                    <function name="register">
                        <trait>released</trait>
                        <desc>Internally used CSK_FlowConfig register function.</desc>
                        <param desc="Handle to internally used FlowConfig instance." multiplicity="1" name="handle" type="handle"/>
                        <param desc="Internal parameter (not used)." multiplicity="1" name="eventname" type="string"/>
                        <param desc="Internally used callback function." multiplicity="1" name="callback" type="string"/>
                        <return desc="Success of register process." multiplicity="1" name="success" type="bool"/>
                    </function>
                </serves>
            </crown>
            <crown name="OnExpired">
                <trait>released</trait>
                <desc>Periodically notify values. Especially helpful for testing purposes.
Will send current timestamp as 2nd parameter.</desc>
                <serves>
                    <event name="OnExpired">
                        <include>data-flow</include>
                        <desc>Periodically notify values. Especially helpful for testing purposes.
Will send current timestamp as 2nd parameter.</desc>
                        <param desc="Handle to internally used FlowConfig instance." multiplicity="1" name="handle" type="handle"/>
                        <param desc="'CSK_FlowConfig.OnExpired_[TYPE]_[TIME]_[VALUE]'&#10;&#10;Parameter:&#10;1: Value (STRING or NUMBER or BOOL)&#10;2: Timestamp (INT)" multiplicity="1" name="OnExpired" type="string"/>
                    </event>
                    <function name="create">
                        <trait>released</trait>
                        <desc>Internally used CSK_FlowConfig create function.</desc>
                        <param desc="Cycle time in ms ('0' for single trigger)" multiplicity="1" name="CycleTime" type="int"/>
                        <param desc="Type of value to send." multiplicity="1" name="ValueType" ref="FlowConfig_FC.ValueType" type="enum"/>
                        <param desc="Value to send via event.&#10;For 'BOOL' values use &quot;true&quot;, &quot;false&quot; or &quot;toggle&quot;." multiplicity="1" name="Value" type="string"/>
                        <return desc="Handle to internally used FlowConfig instance." multiplicity="1" name="handle" type="handle"/>
                    </function>
                    <function name="register">
                        <trait>released</trait>
                        <desc>Internally used CSK_FlowConfig register function.</desc>
                        <param desc="Handle to internally used FlowConfig instance." multiplicity="1" name="handle" type="handle"/>
                        <param desc="Internal parameter (not used)." multiplicity="1" name="eventname" type="string"/>
                        <param desc="Internally used callback function." multiplicity="1" name="callback" type="string"/>
                        <return desc="Success of register process." multiplicity="1" name="success" type="bool"/>
                    </function>
                </serves>
            </crown>
            <crown name="ProcessLogic">
                <desc>Check incoming value(s) with a logical operator. Return result and optionally forward processed value if succesfull.</desc>
                <serves>
                    <function name="create">
                        <desc>Internally used CSK_FlowConfig create function.</desc>
                        <param constraint="1-99" desc="Type of logic operator.&#10;&#10;AND&#10;valueA AND valueB&#10;AND_PREV&#10;valueA AND valueB (keep previous status)&#10;CHANGED&#10;valueA =! previous valueA&#10;EQUAL&#10;valueA == critieraA&#10;GREATER&#10;valueA &gt; criteriaA&#10;GREATER_EQUAL&#10;valueA &gt;= criteriaA&#10;INVERT&#10;not valueA&#10;LESS&#10;valueA &lt; criteriaA&#10;LESS_EQUAL&#10;valueA &lt;= criteriaA&#10;OR&#10;valueA OR valueB&#10;OR_PREV&#10;valueA OR valueB (keep previous status)&#10;OUT_OF_RANGE&#10;valueA &lt; critieriaA OR valueA &gt; critieriaB&#10;RISING_EDGE&#10;valueA == TRUE (was FALSE before)&#10;WITHIN_RANGE&#10;criteriaA &gt;= valueA &lt;= critieriaB" multiplicity="1" name="Logic" ref="CSK_FlowConfig.LogicOperator" type="enum"/>
                        <param desc="Optional criteriaA (see info of logic)." multiplicity="?" name="criteriaA" type="string"/>
                        <param desc="Optional criteriaB (see info of logic)." multiplicity="?" name="criteriaB" type="string"/>
                        <return desc="Handle to internally used FlowConfig instance." multiplicity="1" name="handle" type="handle"/>
                    </function>
                    <function name="processLogic">
                        <include>data-flow</include>
                        <desc>Check incoming value(s) with a logical operator. Return result and optionally forward processed value if succesfull.</desc>
                        <param desc="Handle to internally used FlowConfig instance." multiplicity="1" name="handle" type="handle"/>
                        <param desc="Set source of valueA.&#10;&#10;Parameter:&#10;1: value (AUTO)" multiplicity="?" name="sourceA" type="string"/>
                        <param desc="Set source of valueB.&#10;&#10;Parameter:&#10;1: value (AUTO)" multiplicity="?" name="sourceB" type="string"/>
                        <return desc="'CSK_FlowConfig.OnNewLogicResult_[NUM]'&#10;(NUM is set internally)&#10;&#10;Parameter:&#10;1: (optional) Result (BOOL)" multiplicity="1" name="OnNewLogicResult" type="string"/>
                        <return desc="Forward checked value (ONLY if operation was successfull).&#10;'CSK_FlowConfig.OnNewValueToForward_[NUM]'&#10;(NUM is set internally)&#10;&#10;Parameter:&#10;1: (optional) Result (AUTO)" multiplicity="1" name="OnNewValueToForward" type="string"/>
                    </function>
                </serves>
            </crown>
        </crown>
        <meta key="author">SICK AG</meta>
        <meta key="version">1.3.0</meta>
        <meta key="priority">low</meta>
        <meta key="copy-protected">false</meta>
        <meta key="read-protected">false</meta>
        <meta key="crown2-flow-engine">false</meta>
        <meta key="LuaLoadAllEngineAPI">false</meta>
        <entry default="CSK_Module_FlowConfig.lua" path="scripts"/>
    </application>
</manifest>
